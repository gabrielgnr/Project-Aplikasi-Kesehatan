// Generated by view binder compiler. Do not edit!
package com.vadia.aplikasikesehatanmental.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.vadia.aplikasikesehatanmental.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText birthdate;

  @NonNull
  public final EditText birthplace;

  @NonNull
  public final TextView clickHere;

  @NonNull
  public final EditText confirmPassword;

  @NonNull
  public final EditText email;

  @NonNull
  public final EditText fullname;

  @NonNull
  public final TextView haveAnAcc;

  @NonNull
  public final EditText newPassword;

  @NonNull
  public final EditText noHp;

  @NonNull
  public final TextView regHead;

  @NonNull
  public final TextView register;

  @NonNull
  public final RadioGroup role;

  @NonNull
  public final TextView roleTxt;

  @NonNull
  public final RadioButton typePasien;

  @NonNull
  public final RadioButton typePsikiater;

  @NonNull
  public final EditText username;

  private ActivitySignUpBinding(@NonNull RelativeLayout rootView, @NonNull EditText birthdate,
      @NonNull EditText birthplace, @NonNull TextView clickHere, @NonNull EditText confirmPassword,
      @NonNull EditText email, @NonNull EditText fullname, @NonNull TextView haveAnAcc,
      @NonNull EditText newPassword, @NonNull EditText noHp, @NonNull TextView regHead,
      @NonNull TextView register, @NonNull RadioGroup role, @NonNull TextView roleTxt,
      @NonNull RadioButton typePasien, @NonNull RadioButton typePsikiater,
      @NonNull EditText username) {
    this.rootView = rootView;
    this.birthdate = birthdate;
    this.birthplace = birthplace;
    this.clickHere = clickHere;
    this.confirmPassword = confirmPassword;
    this.email = email;
    this.fullname = fullname;
    this.haveAnAcc = haveAnAcc;
    this.newPassword = newPassword;
    this.noHp = noHp;
    this.regHead = regHead;
    this.register = register;
    this.role = role;
    this.roleTxt = roleTxt;
    this.typePasien = typePasien;
    this.typePsikiater = typePsikiater;
    this.username = username;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.birthdate;
      EditText birthdate = rootView.findViewById(id);
      if (birthdate == null) {
        break missingId;
      }

      id = R.id.birthplace;
      EditText birthplace = rootView.findViewById(id);
      if (birthplace == null) {
        break missingId;
      }

      id = R.id.click_here;
      TextView clickHere = rootView.findViewById(id);
      if (clickHere == null) {
        break missingId;
      }

      id = R.id.confirm_password;
      EditText confirmPassword = rootView.findViewById(id);
      if (confirmPassword == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = rootView.findViewById(id);
      if (email == null) {
        break missingId;
      }

      id = R.id.fullname;
      EditText fullname = rootView.findViewById(id);
      if (fullname == null) {
        break missingId;
      }

      id = R.id.have_an_acc;
      TextView haveAnAcc = rootView.findViewById(id);
      if (haveAnAcc == null) {
        break missingId;
      }

      id = R.id.new_password;
      EditText newPassword = rootView.findViewById(id);
      if (newPassword == null) {
        break missingId;
      }

      id = R.id.no_hp;
      EditText noHp = rootView.findViewById(id);
      if (noHp == null) {
        break missingId;
      }

      id = R.id.reg_head;
      TextView regHead = rootView.findViewById(id);
      if (regHead == null) {
        break missingId;
      }

      id = R.id.register;
      TextView register = rootView.findViewById(id);
      if (register == null) {
        break missingId;
      }

      id = R.id.role;
      RadioGroup role = rootView.findViewById(id);
      if (role == null) {
        break missingId;
      }

      id = R.id.role_txt;
      TextView roleTxt = rootView.findViewById(id);
      if (roleTxt == null) {
        break missingId;
      }

      id = R.id.type_pasien;
      RadioButton typePasien = rootView.findViewById(id);
      if (typePasien == null) {
        break missingId;
      }

      id = R.id.type_psikiater;
      RadioButton typePsikiater = rootView.findViewById(id);
      if (typePsikiater == null) {
        break missingId;
      }

      id = R.id.username;
      EditText username = rootView.findViewById(id);
      if (username == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((RelativeLayout) rootView, birthdate, birthplace, clickHere,
          confirmPassword, email, fullname, haveAnAcc, newPassword, noHp, regHead, register, role,
          roleTxt, typePasien, typePsikiater, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
